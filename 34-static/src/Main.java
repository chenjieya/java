public class Main {
    public static void main(String[] args){
        /**
         * 特征修饰符
         * final 不可更改的，修饰变量（不可更改，如果没复制给一次机会），属性（必须给默认值），方法（不能被重写），类（太监类，不能被继承）
         * static  静态的
         * abstract  抽象的
         * native  本地的（java调用了其他的语言）
         * transient  瞬时的、短暂的
         * synchronized 同步的 --》 线程相关的知识，保护属性或者方法的线程安全
         * volatile  不稳定
         *
         * java面向对象的四大特性
         * 继承 封装 多态 抽象
         *
         * java类和类之间的关系
         * is - a 继承和实现
         * has - a 组合聚合关联包含
         * use - a 依赖关系
         *
         * static
         * 修饰属性
         * 修饰方法
         * 修饰块
         * 修饰类（内部类）
         *
         * 特点：
         * 1.静态元素在类加载的时就初始化了，创建的非常早，此时没有创建对象
         * 2，静态元素存储在静态元素区中，每一个类有一个自己的区域，与别的类不冲突
         * 3.静态元素之加载一次（相当于只有一份），全部的类对象及类本身共享
         * 4.由于在静态元素区加载的时候，有可能没加载对象，可以通过类名字直接访问
         * 5.内存管理问题，占内存创建开始用完及回收，堆内存由GC垃圾回收器回收，静态元素区GC无法管理的，可以粗暴的认为他们是常驻内存的
         * 6.非静态成员（在堆内存中）可以访问到静态成员
         * 7.静态成员也可以访问静态成员
         * 8.静态成员中是不可以访问非静态成员的，一对多，静态成员不知道找谁
         * 9.在静态元素中是不可以出现this或super关键字的，因为静态元素属于类，那个时候还没有创建对象呢
         */
    }
}
